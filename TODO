
// Random or any available node
- Echo(String),
- Ping,
- Config { key: String, value: String },
- Save,
- Info,
- ClusterInfo,
- ClusterNodes,
- ClusterForget(PeerIdentifier),
- ClusterReshard,
- ReplicaOf(PeerIdentifier),
- Role,
- ClusterMeet(PeerIdentifier, LazyOption),

// Specific to a node by hash ring
- Get { key: String },
- Set { key: String, value: String },
- IndexGet { key: String, index: u64 },
- Append { key: String, value: String },
- SetWithExpiry { key: String, value: String, expiry: DateTime<Utc> },
- Incr { key: String },
- Decr { key: String },
- Ttl { key: String },
- IncrBy { key: String, increment: i64 },
- DecrBy { key: String, decrement: i64 },
- LPush { key: String, value: Vec<String> },
- LPop { key: String, count: usize },
- RPush { key: String, value: Vec<String> },
- RPop { key: String, count: usize },
- LTrim { key: String, start: isize, end: isize },
- LLen { key: String },
- LRange { key: String, start: isize, end: isize },

// Split commands by hash ring
- Delete { keys: Vec<String> } -> count of deleted keys
- Exists { keys: Vec<String> } -> count of existing keys
- MGet { keys: Vec<String> } -> values of keys

// All
- Keys { pattern: Option<String> },


// Assumptions:
1. Each request's responses will be sent back before the next request is processed.
2. What if the response is not received? timeout then retry or fail
